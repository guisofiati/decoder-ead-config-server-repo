server:
  port: 8087
  servlet:
    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service
  datasource:
    url: jdbc:postgresql://localhost:5433/ead-authuser
    username: postgres
    password: 123456
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creaction: true
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: always
  rabbitmq:
    addresses: amqps://uwkbdeas:0QhCNUCvbbiSwuXmw4buwvkd-cHtcpGC@shrimp.rmq.cloudamqp.com/uwkbdeas

logging:
  level:
    root: info
    org.springframework.web: info
    org.hibernate: info
    com.ead: info

ead:
  api:
    url:
      course: 'http://ead-course-service/ead-course'
  broker:
    exchange:
      userEvent: ead.userevent
      paymentEvent: ead.paymentevent
    queue:
      paymentEventQueue:
        name: ead.paymentevent.ms.authuser

authUser:
  refreshscope:
    name: Guilherme Sofiati Fantin

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health

resilience4j:
  circuitbreaker:
    instances:
      circuitbreakerInstance:
        # try 2 calls 30sec to activate open state
        slidingWindowSize: 30
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 2
        waitDurationInOpenState: 30s
        failureRateThreshold: 80
  retry:
    instances:
      retryInstance:
        maxAttempts: 3
        waitDuration: 5s
